[
    {
        "id": 1,
        "projectName": "Project: Database Crawler",
        "skillsShowcased": "Full Stack Development, Database Relationships, MySQL Database, Express, HTML & API routes, User Security",
        "desc": "This is a text based game with images that allows the user to play through an adventure centered around escaping a dungeon. It uses a sql database to store all persistent data relating to users and the characters that belong to them as well as the predefined contents of the game such as player location, inventory and more! This app utilizes a complex set of tables and relations including items and characters in a many to many association through a join table. Interactions to the sql were handled through mysql and sequelize and information was passed back and forth on an express server using api-routes.",
        "image": "images/database-crawler-900x450.gif",
        "deployedLink": "https://ancient-wave-96254.herokuapp.com/",
        "gitHubLink": "https://github.com/Pting1995/Database-Crawler"
    },
    {
        "id": 2,
        "projectName": "Project: Fun Finder",
        "skillsShowcased": "APIs, API Queries, Dynamic Card Generation and Information",
        "desc": "How many times have you had some free time and you can't decide what to do? I constantly have this problem! This website was created to help people make use of their free time doing the things that they love. With the help of different API's, we are able to provide recommendations on various games, movies, and recipes that you may want to take a look at. These options are then appended to the page dynamically. This website can expand indefinitely with more APIs until there aren't anymore that I can add. But ideally these recommendations will occupy you for around an hour to an afternoon just I feel that the app shines the most when the suggestions are spontaneous!",
        "image": "images/fun-finder-demo-1400x700.gif",
        "deployedLink": "https://pting1995.github.io/Fun-Finder/",
        "gitHubLink": "https://github.com/Pting1995/Fun-Finder"
    },
    {
        "id": 3,
        "projectName": "Project: What to Eat Database",
        "skillsShowcased": "Databases, MVC, ORM, Express, Express-handlebars, Schema",
        "desc": "This database was made to help keep track of food bucket lists! Have no idea what to eat for dinner? Take a gander at the \"Foods that I have eaten!\" list, or if you're feeling daring pick something off the \"Foods that I haven't eaten!\" list! This was one of my most confusing projects so far just because of the amount of files the model-view-controller (MVC) structure requires and the way information is passed between them to accomplish the goal of putting information into a database. This project was a great place to use express-handlebars because of how seemingly infinitely large databases are. With handlebars I could quickly create repeating structures on the page the user sees.",
        "image": "images/what-to-eat-demo-1400x700.gif",
        "deployedLink": "https://immense-river-70800.herokuapp.com/",
        "gitHubLink": "https://github.com/Pting1995/pet-tracker"
    },
    {
        "id": 4,
        "projectName": "Project: Employee Organizer",
        "skillsShowcased": "React, React UseState, React UseEffect, Sorting, Searching On Change, APIs",
        "desc": "This app helps you keep your employees organized! Right now it uses an API to generate 15 random people with images, first and last names, phone numbers, emails, and date of births. Right now you can sort by name, phone number, email, and date. Alternatively you can search by typing in the employee's name in the \"Employee Search\" form. It will dynamically filter though your employees with the string you input into the form. I designed it so that incase your employees share first names, they can still be searched with first and last names!",
        "image": "images/employee-organizer-1400x700-demo.gif",
        "deployedLink": "https://pting1995.github.io/employee-organizer/",
        "gitHubLink": "https://github.com/Pting1995/employee-organizer"
    },
    {
        "id": 5,
        "projectName": "Project: Memory Clicker",
        "skillsShowcased": "React, React State, React Prop-drilling, React SetState, Dynamically Appending Information",
        "desc": "This app was designed to challenge the user with a memory test! Upon loading the app, the user will be met with a navbar presenting the current score and highest score. Try your best to click each cat picture once! If you click on a cat, your score will increment and the pictures will be randomized, but if you click on the same cat again then the score will reset and youll have to try again! Try your best to achieve a score of 12! That is a prefect score in this game! Don't get discracted by the cats! It's a tough game! Good luck and have fun!",
        "image": "images/memory-clicker-1400x700-demo.gif",
        "deployedLink": "https://pting1995.github.io/memory-clicker/",
        "gitHubLink": "https://github.com/Pting1995/memory-clicker"
    },
    {
        "id": 6,
        "projectName": "Project: Random Password Generator",
        "skillsShowcased": "Pseudocoding, If-Else Statements, Arrays, Math.Random",
        "desc": "This site was made to create random passwords! Upon clicking the \"Generate Password\" button prompts will appear and ask the user the desired criteria for the password. Criteria include character types, such as lower case characters, upper case characters, numeric characters, special characters, and also password length. There are two checks for password length and that there's at least one character type selected. All desired characters are added to a control array where a random number is selected between 1 and the total number of items in the control array. This will occur until the desired password length is achieved and then will be displayed in the text box.",
        "image": "images/random-password-generator-demo-1400x700.gif",
        "deployedLink": null,
        "gitHubLink": "https://github.com/Pting1995/password-generator"
    }
]